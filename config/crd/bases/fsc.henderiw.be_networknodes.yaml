
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  name: networknodes.fsc.henderiw.be
spec:
  group: fsc.henderiw.be
  names:
    kind: NetworkNode
    listKind: NetworkNodeList
    plural: networknodes
    singular: networknode
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: NetworkNode is the Schema for the networknodes API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: NetworkNodeSpec defines the desired state of NetworkNode
          properties:
            consumerRef:
              description: ConsumerRef can be used to store information about something
                that is using a network Node. When it is not empty, the Network Node
                is considered "in use".
              properties:
                apiVersion:
                  description: API version of the referent.
                  type: string
                fieldPath:
                  description: 'If referring to a piece of an object instead of an
                    entire object, this string should contain a valid JSON/Go field
                    access statement, such as desiredState.manifest.containers[2].
                    For example, if the object reference is to a container within
                    a pod, this would take on a value like: "spec.containers{name}"
                    (where "name" refers to the name of the container that triggered
                    the event) or if no container name is specified "spec.containers[2]"
                    (container with index 2 in this pod). This syntax is chosen only
                    to have some well-defined way of referencing a part of an object.
                    TODO: this design is not final and this field is subject to change
                    in the future.'
                  type: string
                kind:
                  description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                  type: string
                name:
                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                  type: string
                namespace:
                  description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                  type: string
                resourceVersion:
                  description: 'Specific resourceVersion to which this reference is
                    made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                  type: string
                uid:
                  description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                  type: string
              type: object
            target:
              description: Target defines how we connect to the network node
              properties:
                address:
                  description: Address holds the IP:port for accessing the network
                    node
                  type: string
                credentialsName:
                  description: The name of the secret containing the credentials (requires
                    keys "username" and "password").
                  type: string
                encoding:
                  description: Encoding
                  type: string
                insecure:
                  description: Insecure runs the grpc call in an insecure manner
                  type: boolean
                protocol:
                  description: Protocol used to communicate to the target network
                    node
                  type: string
                proxy:
                  description: Proxy used to communicate to the target network node
                  type: string
                skpVerify:
                  description: SkipVerify disables verification of server certificates
                    when using HTTPS to connect to the Target. This is required when
                    the server certificate is self-signed, but is insecure because
                    it allows a man-in-the-middle to intercept the connection.
                  type: boolean
                tlsCredentialsName:
                  description: The name of the secret containing the credentials (requires
                    keys "TLSCA" and "TLSCert", " TLSKey").
                  type: string
              required:
              - address
              - credentialsName
              - tlsCredentialsName
              type: object
          type: object
        status:
          description: NetworkNodeStatus defines the observed state of NetworkNode
          properties:
            discoveryStatus:
              description: Information tracked by the discoverer.
              properties:
                state:
                  description: An indiciator for what the discoverer is doing with
                    the host.
                  type: string
              required:
              - state
              type: object
            errorCount:
              default: 0
              description: ErrorCount records how many times the host has encoutered
                an error since the last successful operation
              type: integer
            errorMessage:
              description: the last error message reported by the provisioning subsystem
              type: string
            errorType:
              description: ErrorType indicates the type of failure encountered when
                the OperationalStatus is OperationalStatusError
              enum:
              - registration error
              - inspection error
              - provisioning error
              - power management error
              type: string
            hardware:
              description: The hardware discovered on the Network Node.
              properties:
                hostname:
                  type: string
                kind:
                  type: string
                softwareVersion:
                  type: string
              required:
              - hostname
              - kind
              - softwareVersion
              type: object
            lastUpdated:
              description: LastUpdated identifies when this status was last observed.
              format: date-time
              type: string
            operationHistory:
              description: OperationHistory holds information about operations performed
                on this host.
              properties:
                deprovision:
                  description: OperationMetric contains metadata about an operation
                    (inspection, provisioning, etc.) used for tracking metrics.
                  properties:
                    end:
                      format: date-time
                      nullable: true
                      type: string
                    start:
                      format: date-time
                      nullable: true
                      type: string
                  type: object
                inspect:
                  description: OperationMetric contains metadata about an operation
                    (inspection, provisioning, etc.) used for tracking metrics.
                  properties:
                    end:
                      format: date-time
                      nullable: true
                      type: string
                    start:
                      format: date-time
                      nullable: true
                      type: string
                  type: object
                provision:
                  description: OperationMetric contains metadata about an operation
                    (inspection, provisioning, etc.) used for tracking metrics.
                  properties:
                    end:
                      format: date-time
                      nullable: true
                      type: string
                    start:
                      format: date-time
                      nullable: true
                      type: string
                  type: object
                register:
                  description: OperationMetric contains metadata about an operation
                    (inspection, provisioning, etc.) used for tracking metrics.
                  properties:
                    end:
                      format: date-time
                      nullable: true
                      type: string
                    start:
                      format: date-time
                      nullable: true
                      type: string
                  type: object
              type: object
            operationalStatus:
              description: OperationalStatus holds the status of the host
              enum:
              - ""
              - OK
              - discovered
              - error
              type: string
          required:
          - discoveryStatus
          - errorCount
          - errorMessage
          - operationHistory
          - operationalStatus
          type: object
      type: object
  version: v1
  versions:
  - name: v1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
